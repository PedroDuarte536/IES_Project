version: "3.3"

# services -> database, client, backend, message_broker, data_generation
services:

  db:
    container_name: database
    image: mysql:8.0.27
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ies
      MYSQL_USER: ies
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
      - .database/ies.sql:/docker-entrypoint-initdb.d/ies.sql
    restart: on-failure
    networks:
      - finance_db

  backend:
    container_name: backend
    build: ./finance
    ports:
      - "8080:8080"
    depends_on:
      - db
      #- message_broker
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/ies
      SPRING_DATASOURCE_USERNAME: ies
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: message_broker
    restart: on-failure
    networks:
      - finance_db

  

  client:
    container_name: client
    build: ./use_cases
    ports: 
      - '80:80'
    depends_on:
      - db
      #- message_broker
      - backend
      #- data_generation
    environment:
      SERVER_IP: backend
    networks:
      - finance_db

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  finance_db:


  # message_broker:
  #   container_name: rabbitmq
  #   build: ./message_broker
  #   image: 'rabbitmq:3.9.11'
  #   ports:
  #     # Standard AMQP (Advanced Message Queuing Protocol) port
  #     - '5672:5672'
  #     # UI and HTTP API port (https://www.rabbitmq.com/management.html). It doesn't support AMQP, so it should be separated 
  #     - '15672:15672'
  #   # Reference: https://zgadzaj.com/development/docker/docker-compose/containers/rabbitmq
  #   environment:
  #     RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  #   volumes:
  #     - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
  #     - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
  #     - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/

  # data_generation:
  #   container_name: data_generation
  #   build: .
  #   depends_on:
  #     - db
  #     - message_broker
  #     - backend
  #   environment:
  #     RABBITMQ_IP: message_broker
  #     SERVER_IP: backend
  #   restart: on-failure
    